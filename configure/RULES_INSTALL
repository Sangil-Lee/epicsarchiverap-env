
SERVICES_INSTALL_RULES:=
$(call buildrules_BUILDER,$(AA_USERID),$(AA_GROUPID),$(AA_INSTALL_LOCATION),$(INSTALL_LOCATION_SERVICES),SERVICES_INSTALL_RULES)
#conf_RULES_NAMES:=log4j appliances properties policies serverxml
conf_RULES_NAMES:=log4j archapplconf appliances properties policies serverxml archapplshell
conf_install_RULES:=$(addsuffix .install, $(conf_RULES_NAMES))
show_conf_RULES:=$(addsuffix .show, serverxml archapplshell)

.PHONY: install services.install

## Install
install:  src_install services.install serveroption.install sd_install sd_enable
	$(QUIET)$(SUDO)	chown -R $(AA_USERID):$(AA_GROUPID) $(AA_INSTALL_LOCATION)

services.install: $(SERVICES_INSTALL_RULES) $(conf_install_RULES)

log4j.install: log4j.properties
	$(QUIET)echo ">>> Install $< into $(TOMCAT_HOME)/lib/"
	$(QUIET)$(SUDO) install $< $(TOMCAT_HOME)/lib/

archapplconf.install: $(ARCHAPPL_CONF)
	$(QUIET)echo ">>> Install $< into $(AA_INSTALL_LOCATION)/"
	$(QUIET)$(SUDO) install $< $(AA_INSTALL_LOCATION)/

archapplconf.show: $(ARCHAPPL_CONF)
	$(QUIET)echo ">>> Show the installed $(AA_INSTALL_LOCATION)/$(patsubst $(AA_SITE_TEMPLATE_PATH)/%,%,$<) "
	$(QUIET)cat -bs $(AA_INSTALL_LOCATION)/$(patsubst $(AA_SITE_TEMPLATE_PATH)/%,%,$<)

# Three files are moved into $(ARCHAPPL_SITEID_CLASSPATHFILES_PATH)
# before build.ant. So these files are locatedin war files automatically.
# Thus, we don't need them
appliances.install: $(ARCHAPPL_APPLIANCES)
	$(QUIET)echo ">>> Install $< into $(AA_INSTALL_LOCATION)/"
	$(QUIET)$(SUDO) install $< $(AA_INSTALL_LOCATION)/

properties.install: $(ARCHAPPL_PROPERTIES)
	$(QUIET)echo ">>> Install $< into $(AA_INSTALL_LOCATION)/"
	$(QUIET)$(SUDO) install -o $(AA_USERID) -g $(AA_GROUPID) $< $(AA_INSTALL_LOCATION)/

policies.install: $(ARCHAPPL_POLICIES)
	$(QUIET)echo ">>> Install $< into $(AA_INSTALL_LOCATION)/"
	$(QUIET)$(SUDO) install -o $(AA_USERID) -g $(AA_GROUPID) $< $(AA_INSTALL_LOCATION)/

# all other ports are disable by default from $(TOMCAT_HOME)/skel/conf/server.
# mgmt, engine, bpl, and retrieval
serverxml.install:
	$(QUIET)echo ">>> Update  $(AA_INSTALL_LOCATION)/*/conf/server.xml to use the proper port numbers to match $(ARCHAPPL_APPLIANCES)"
	$(QUIET)$(SUDO) sed -i.bak -e 's|Connector port="8080"|Connector port="$(ARCHAPPL_MGMT_PORT)"|g' -e 's|Server port="-1" shutdown="SHUTDOWN"|Server port="$(ARCHAPPL_SHUTDOWN_MGMT_PORT)" shutdown="SHUTDOWN"|g' $(AA_INSTALL_LOCATION)/mgmt/conf/server.xml
	$(QUIET)$(SUDO) sed -i.bak -e 's|Connector port="8080"|Connector port="$(ARCHAPPL_ENGINE_PORT)"|g' -e 's|Server port="-1" shutdown="SHUTDOWN"|Server port="$(ARCHAPPL_SHUTDOWN_ETL_PORT)" shutdown="SHUTDOWN"|g' $(AA_INSTALL_LOCATION)/engine/conf/server.xml
	$(QUIET)$(SUDO) sed -i.bak -e 's|Connector port="8080"|Connector port="$(ARCHAPPL_ETL_PORT)"|g' -e 's|Server port="-1" shutdown="SHUTDOWN"|Server port="$(ARCHAPPL_SHUTDOWN_ENGINE_PORT)" shutdown="SHUTDOWN"|g' $(AA_INSTALL_LOCATION)/etl/conf/server.xml
	$(QUIET)$(SUDO) sed -i.bak -e 's|Connector port="8080"|Connector port="$(ARCHAPPL_RETRIEVAL_PORT)"|g' -e 's|Server port="-1" shutdown="SHUTDOWN"|Server port="$(ARCHAPPL_SHUTDOWN_RETRIEVAL_PORT)" shutdown="SHUTDOWN"|g' $(AA_INSTALL_LOCATION)/retrieval/conf/server.xml

serverxml.show:
	$(QUIET)cat -b $(AA_INSTALL_LOCATION)/mgmt/conf/server.xml
	$(QUIET)cat -b $(AA_INSTALL_LOCATION)/engine/conf/server.xml
	$(QUIET)cat -b $(AA_INSTALL_LOCATION)/etl/conf/server.xml
	$(QUIET)cat -b $(AA_INSTALL_LOCATION)/retrieval/conf/server.xml

serveroption.install:
	$(QUIET)$(SUDO) install -o $(AA_USERID) -g $(AA_GROUPID) $(AA_SITE_TEMPLATE_PATH)/mgmt.conf $(AA_INSTALL_LOCATION)/mgmt/conf/
	$(QUIET)$(SUDO) install -o $(AA_USERID) -g $(AA_GROUPID) $(AA_SITE_TEMPLATE_PATH)/engine.conf $(AA_INSTALL_LOCATION)/engine/conf/
	$(QUIET)$(SUDO) install -o $(AA_USERID) -g $(AA_GROUPID) $(AA_SITE_TEMPLATE_PATH)/etl.conf $(AA_INSTALL_LOCATION)/etl/conf/
	$(QUIET)$(SUDO) install -o $(AA_USERID) -g $(AA_GROUPID) $(AA_SITE_TEMPLATE_PATH)/retrieval.conf $(AA_INSTALL_LOCATION)/retrieval/conf/

archapplshell.install: $(ARCHAPPL_MAIN_SCRIPT)
	$(QUIET)echo ">>> Install $< into $(AA_INSTALL_LOCATION)/"
	$(QUIET)$(SUDO) install $< $(AA_INSTALL_LOCATION)/

archapplshell.show: $(ARCHAPPL_MAIN_SCRIPT)
	$(QUIET)cat -bs $(AA_INSTALL_LOCATION)/$(patsubst $(TOP)/scripts/%,%,$<)

src_install: src_version src_preinst
#	$(if $(wildcard $(AA_INSTALL_LOCATION)), $(QUIET)$(SUDO) mv $(AA_INSTALL_LOCATION) $(AA_INSTALL_LOCATION)_backup_$$(date +%Y%m%d-%H%M%S))
	$(QUIET)$(SUDO) $(INSTALL) -d -o $(AA_USERID) -g $(AA_GROUPID) $(AA_INSTALL_LOCATION)

src_uninstall:
	$(QUIET)echo "Removing $(AA_INSTALL_LOCATION)..."
	$(QUIET)$(SUDO) rm -rf $(AA_INSTALL_LOCATION)/

# Don't need to run src_postrm
uninstall: sd_stop sd_disable sd_clean
	$(QUIET)echo "Removing $(AA_INSTALL_LOCATION)..."
	$(QUIET)$(SUDO) rm -rf $(AA_INSTALL_LOCATION)/
	$(QUIET)$(SUDO) systemctl daemon-reload


.PHONY: src_version src_preinst src_postrm clean

# Tomcat Service is already in the system
src_preinst:
	$(QUIET)$(SUDO) bash $(AA_SITE_TEMPLATE_PATH)/usergroup.postinst "configure" "$(AA_USERID)" "$(AA_GROUPID)"

# Tomcat Service is already in the system
src_postrm:
	$(QUIET)$(SUDO) bash $(AA_SITE_TEMPLATE_PATH)/usergroup.postrm "purge" "$(AA_USERID)"

src_version: FORCE
	$(QUIET)echo "Timestamps : $$(date +%Y%m%d-%H%M%S)/YYYYMMDD-HHMMSS" > $(AA_SITE_TEMPLATE_PATH)/.versions
	$(QUIET)echo "- SRC REMOTE URL   : $(SRC_GITURL)"  >> $(AA_SITE_TEMPLATE_PATH)/.versions
	$(QUIET)echo "- SRC SITE VERSION : $(SRC_TAG)"     >> $(AA_SITE_TEMPLATE_PATH)/.versions
	$(QUIET)echo -n "- SRC GIT  VERSION : "            >> $(AA_SITE_TEMPLATE_PATH)/.versions
	$(QUIET)cd $(SRC_PATH) && git log  --oneline -1    >> $(AA_SITE_TEMPLATE_PATH)/.versions

clean:
	rm -rf $(AA_SITE_TEMPLATE_PATH)/.versions

FORCE:



#reinstall: conf build install
#restart: uninstall reinstall cf_start cf_status
